package main // –û—Å–Ω–æ–≤–Ω–æ–π –ø–∞–∫–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

import (
	// –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
	"bufio"
	"bytes"
	"encoding/json"
	"fmt"
	"io"
	log "log"
	"net/http"
	"os"
	"regexp"
	"strings"

	// –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Telegram Bot API
	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
	"github.com/joho/godotenv"
)

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è ID –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –±–æ—Ç–æ–º.
// –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π –Ω–æ–≤–æ–≥–æ.
var lastBotMessageID int

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è –º–∞–ø–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–∞–∂–¥–æ–≥–æ —á–∞—Ç–∞ (–∫–ª—é—á ‚Äî ID —á–∞—Ç–∞, –∑–Ω–∞—á–µ–Ω–∏–µ ‚Äî —Å—Ç—Ä–æ–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è).
// –í–æ–∑–º–æ–∂–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è: "main", "question", "instruction", "tariffs".
// "main" ‚Äî –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é; "question" ‚Äî —Ä–µ–∂–∏–º –¥–ª—è –≤–≤–æ–¥–∞ –≤–æ–ø—Ä–æ—Å–∞; "instruction"/"tariffs" ‚Äî —Ä–µ–∂–∏–º—ã –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –∏ —Ç–∞—Ä–∏—Ñ–æ–≤.
var userState = make(map[int64]string)

// –§—É–Ω–∫—Ü–∏—è main ‚Äî —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ –ø—Ä–æ–≥—Ä–∞–º–º—É.
func main() {
	// –ü–æ–ª—É—á–∞–µ–º API-–∫–ª—é—á –±–æ—Ç–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π —Å—Ä–µ–¥—ã
	TELEGRAM_BOT_TOKEN := importEnv("hiddenFiles.env", "TELEGRAM_BOT_TOKEN")

	// –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –±–æ—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É—è –≤–∞—à —É–Ω–∏–∫–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω.
	bot, err := tgbotapi.NewBotAPI(TELEGRAM_BOT_TOKEN)
	// –ï—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –Ω–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω), –ª–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –∏ –∑–∞–≤–µ—Ä—à–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ.
	if err != nil {
		log.Panic(err)
	}

	// –í–∫–ª—é—á–∞–µ–º —Ä–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏ –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞.
	// bot.Debug = true

	// –í—ã–≤–æ–¥–∏–º –≤ –ª–æ–≥ –∏–º—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ –±–æ—Ç–∞.
	log.Printf("Authorized on account %s", bot.Self.UserName)

	// –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π.
	// –ó–Ω–∞—á–µ–Ω–∏–µ 0 –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –º—ã —Ö–æ—Ç–∏–º –ø–æ–ª—É—á–∞—Ç—å –≤—Å–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å —Å–∞–º–æ–≥–æ –Ω–∞—á–∞–ª–∞.
	updateConfig := tgbotapi.NewUpdate(0)
	// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–π–º–∞—É—Ç –≤ 60 —Å–µ–∫—É–Ω–¥ –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è –Ω–æ–≤—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π.
	updateConfig.Timeout = 60

	// –ü–æ–ª—É—á–∞–µ–º –∫–∞–Ω–∞–ª, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –±—É–¥—É—Ç –ø–æ—Å—Ç—É–ø–∞—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è (–Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è).
	updates := bot.GetUpdatesChan(updateConfig)

	// –ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–∞–∂–¥–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è.
	for update := range updates {
		// –ï—Å–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ (–∞ –Ω–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä, callback-–∑–∞–ø—Ä–æ—Å), —Ç–æ:
		if update.Message != nil {
			// –ü–µ—Ä–µ–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ñ—É–Ω–∫—Ü–∏—é handleMessage –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏.
			handleMessage(bot, update.Message)
		}
	}
}

// –§—É–Ω–∫—Ü–∏—è handleMessage –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—Ö–æ–¥—è—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
func handleMessage(bot *tgbotapi.BotAPI, message *tgbotapi.Message) {

	// // ----------------------- –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è -----------------------
	// // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID —á–∞—Ç–∞ –∏ ID —Å–æ–æ–±—â–µ–Ω–∏—è.
	// deleteMsg := tgbotapi.NewDeleteMessage(message.Chat.ID, message.MessageID)
	// // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
	// bot.Send(deleteMsg)

	// // ----------------------- –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞ -----------------------
	// // –ï—Å–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è lastBotMessageID –Ω–µ —Ä–∞–≤–Ω–∞ 0, –∑–Ω–∞—á–∏—Ç –±–æ—Ç —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª —Å–æ–æ–±—â–µ–Ω–∏–µ.
	// if lastBotMessageID != 0 {
	// 	// –°–æ–∑–¥–∞–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞.
	// 	deleteBotMsg := tgbotapi.NewDeleteMessage(message.Chat.ID, lastBotMessageID)
	// 	// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ.
	// 	bot.Send(deleteBotMsg)
	// }

	// ----------------------- –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è -----------------------
	// –ò–∑–≤–ª–µ–∫–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —á–∞—Ç–∞ –∏–∑ –º–∞–ø—ã userState.
	state, exists := userState[message.Chat.ID]
	// –ï—Å–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–µ –∑–∞–¥–∞–Ω–æ, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å—á–∏—Ç–∞–µ–º, —á—Ç–æ —á–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é.
	if !exists {
		state = "main"
		userState[message.Chat.ID] = "main"
	}

	// ----------------------- –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è -----------------------
	switch state {
	// –°–æ—Å—Ç–æ—è–Ω–∏–µ "main" ‚Äî –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é.
	case "main":
		switch message.Text {
		// –ö–æ–º–∞–Ω–¥–∞ /start –∏–Ω–∏—Ü–∏–∏—Ä—É–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.
		case "/start":
			// –°–æ—Å—Ç–æ—è–Ω–∏–µ –æ—Å—Ç–∞–µ—Ç—Å—è "main" –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.
			lastBotMessageID = sendMainMenu(bot, message.Chat.ID)
		// –ü—Ä–∏ –≤—ã–±–æ—Ä–µ –ø—É–Ω–∫—Ç–∞ "üîÆ –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å üîÆ" –ø–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Ä–µ–∂–∏–º –≤–æ–ø—Ä–æ—Å–∞.
		case "üîÆ –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å üîÆ":
			// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —á–∞—Ç–∞ –≤ "question".
			userState[message.Chat.ID] = "question"
			// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–µ–Ω—é –¥–ª—è –≤–æ–ø—Ä–æ—Å–æ–≤, –≥–¥–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –≤—ã–±—Ä–∞—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç –∏–ª–∏ –≤–≤–µ—Å—Ç–∏ –≤–æ–ø—Ä–æ—Å –≤—Ä—É—á–Ω—É—é.
			lastBotMessageID = sendQuestionMenu(bot, message.Chat.ID)
		// –ü—Ä–∏ –≤—ã–±–æ—Ä–µ "üìë –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è üìë" –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ "instruction" –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é.
		case "üìë –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è üìë":
			userState[message.Chat.ID] = "instruction"
			lastBotMessageID = sendInstruction(bot, message.Chat.ID)
		// –ü—Ä–∏ –≤—ã–±–æ—Ä–µ "üí≤–¢–∞—Ä–∏—Ñ—ãüí≤" –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ "tariffs" –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–æ–≤.
		case "üí≤–¢–∞—Ä–∏—Ñ—ãüí≤":
			userState[message.Chat.ID] = "tariffs"
			lastBotMessageID = sendTariffs(bot, message.Chat.ID)
		// –ï—Å–ª–∏ –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.
		case "–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é":
			userState[message.Chat.ID] = "main"
			lastBotMessageID = sendMainMenu(bot, message.Chat.ID)
		// –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ª—é–±–æ–π –¥—Ä—É–≥–æ–π —Ç–µ–∫—Å—Ç –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é, –≤—ã–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ.
		default:
			lastBotMessageID = sendMessage(bot, message.Chat.ID, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –∏–∑ –º–µ–Ω—é.")
		}

	// –°–æ—Å—Ç–æ—è–Ω–∏–µ "question" ‚Äî –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–µ—Ä–µ—à—ë–ª –≤ —Ä–µ–∂–∏–º "üîÆ –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å üîÆ".
	case "question":
		switch message.Text {
		// –ï—Å–ª–∏ –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.
		case "–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é":
			userState[message.Chat.ID] = "main"
			lastBotMessageID = sendMainMenu(bot, message.Chat.ID)
		// –ï—Å–ª–∏ –≤–≤–µ–¥—ë–Ω –ª—é–±–æ–π –¥—Ä—É–≥–æ–π —Ç–µ–∫—Å—Ç, —Å—á–∏—Ç–∞–µ–º –µ–≥–æ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω—ã–º –≤–æ–ø—Ä–æ—Å–æ–º.
		default:
			if len(message.Text) > 200 {
				// –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –Ω–µ-—Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
				// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª–∏–Ω–Ω–æ–µ –∏–ª–∏ –Ω–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ.
				lastBotMessageID = sendMessage(bot, message.Chat.ID, "–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –ª–∏–±–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ.")
				// –ü–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–æ–ø—Ä–æ—Å–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.
				userState[message.Chat.ID] = "main"
			} else {

				userPrompt := `
				–¢—ã –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –≥–∞–¥–∞–ª–∫–∞-—Ç–∞—Ä–æ–ª–æ–≥! –†–∞–∑–±–∏—Ä–∞–µ—à—å—Å—è –≤–æ –≤—Å–µ—Ö —Ç–µ—Ä–º–∏–Ω–∞—Ö —Ç–∞—Ä–æ–ª–æ–≥–∏–∏, –≥–æ—Ä–æ—Å–∫–æ–ø–∞ –∏ –±—É–¥—É—â–µ–≥–æ!
				
				–Ø –Ω–∞–ø–∏—à—É —Ç–µ–±–µ –≤–æ–ø—Ä–æ—Å –∫–∞—Å–∞—é—â–∏–π—Å—è –º–æ–µ–≥–æ –±—É–¥—É—â–µ–≥–æ.  –°–ê–ú–û–ï –ì–õ–ê–í–ù–û–ï –ï–°–õ–ò –ú–û–ô –í–û–ü–†–û–° –ù–ï –ë–£–î–ï–¢ –ü–û–•–û–ñ –ù–ê –ó–ê–ü–†–û–° –ü–û –ì–ê–î–ê–ù–ò–Æ, –¢–û –¢–´ –î–û–õ–ñ–ï–ù –í–ï–ñ–õ–ò–í–û –û–¢–ö–ê–ó–ê–¢–¨ –í –ì–ê–î–ê–ù–ò–ò –ò –ë–û–õ–¨–®–ï –ù–ò–ß–ï–ì–û –ù–ï –ü–ò–°–ê–¢–¨!!! –°–ê–ú–û–ï –ì–õ–ê–í–ù–û–ï –ï–°–õ–ò –ú–û–ô –í–û–ü–†–û–° –ù–ï –ë–£–î–ï–¢ –ü–û–•–û–ñ –ù–ê –ó–ê–ü–†–û–° –ü–û –ì–ê–î–ê–ù–ò–Æ, –¢–û –¢–´ –î–û–õ–ñ–ï–ù –í–ï–ñ–õ–ò–í–û –û–¢–ö–ê–ó–ê–¢–¨ –í –ì–ê–î–ê–ù–ò–ò –ò –ë–û–õ–¨–®–ï –ù–ò–ß–ï–ì–û –ù–ï –ü–ò–°–ê–¢–¨!!!
				
				–¢–≤–æ—è –∑–∞–¥–∞—á–∞:
				–°–¥–µ–ª–∞—Ç—å –º–Ω–µ —Ä–∞—Å–∫–ª–∞–¥ –ø–æ —Ç—Ä—ë–º –∫–∞—Ä—Ç–∞–º —Ç–∞—Ä–æ. –ö–∞—Ä—Ç—ã —Ç—ã –¥–æ–ª–∂–µ–Ω –≤—ã–±—Ä–∞—Ç—å —Å–∞–º, –Ω–∞–∑–≤–∞—Ç—å –∏ –æ–ø–∏—à–∏ —á—Ç–æ –æ–Ω–∏ –∑–Ω–∞—á–∞—Ç. –†–∞—Å—Å–∫–∞–∑–∞—Ç—å –∫–∞–∫ –ø—Ä–æ–π–¥—ë—Ç –º–æ–π –¥–µ–Ω—å —Å–µ–≥–æ–¥–Ω—è –∏—Å—Ö–æ–¥—è –∏–∑ —ç—Ç–∏—Ö –∫–∞—Ä—Ç.
				–†–∞—Å—Å–∫–∞–∂–∏ –Ω–µ –¥–ª–∏–Ω–Ω–æ, –Ω–µ –±–æ–ª—å—à–µ 800 —Å–∏–º–≤–æ–ª–æ–≤.
				–û–¢–í–ï–ß–ê–ô –¢–û–õ–¨–ö–û –ù–ê –†–£–°–°–ö–û–ú –Ø–ó–´–ö–ï –ù–ï –ò–°–ü–û–õ–¨–ó–£–ô –ù–ò–ö–ê–ö–ò–• –î–†–£–ì–ò–• –Ø–ó–´–ö–û–í –û–¢–í–ï–ß–ê–ô –¢–û–õ–¨–ö–û –ò–°–ü–û–õ–¨–ó–£–Ø –ö–ò–†–ò–õ–ò–¶–£ –û–¢–í–ï–ß–ê–ô –¢–û–õ–¨–ö–û –ò–°–ü–û–õ–¨–ó–£–Ø –ö–ò–†–ò–õ–ò–¶–£!!!! –û–¢–í–ï–ß–ê–ô –¢–û–õ–¨–ö–û –ù–ê –†–£–°–°–ö–û–ú –Ø–ó–´–ö–ï –ù–ï –ò–°–ü–û–õ–¨–ó–£–ô –ù–ò–ö–ê–ö–ò–• –î–†–£–ì–ò–• –Ø–ó–´–ö–û–í –û–¢–í–ï–ß–ê–ô –¢–û–õ–¨–ö–û –ò–°–ü–û–õ–¨–ó–£–Ø –ö–ò–†–ò–õ–ò–¶–£!!!!
				
				–í–æ–ø—Ä–æ—Å –∫–∞—Å–∞—é—â–∏–π—Å—è –º–æ–µ–≥–æ –±—É–¥—É—â–µ–≥–æ, –û–¢–í–ï–ß–ê–ô –¢–û–õ–¨–ö–û –ù–ê –†–£–°–°–ö–û–ú –Ø–ó–´–ö–ï –ù–ï –ò–°–ü–û–õ–¨–ó–£–ô –ù–ò–ö–ê–ö–ò–• –î–†–£–ì–ò–• –Ø–ó–´–ö–û–í –û–¢–í–ï–ß–ê–ô –¢–û–õ–¨–ö–û –ò–°–ü–û–õ–¨–ó–£–Ø –ö–ò–†–ò–õ–ò–¶–£ –û–¢–í–ï–ß–ê–ô –¢–û–õ–¨–ö–û –ò–°–ü–û–õ–¨–ó–£–Ø –ö–ò–†–ò–õ–ò–¶–£!!!! –°–ê–ú–û–ï –ì–õ–ê–í–ù–û–ï –ï–°–õ–ò –ú–û–ô –í–û–ü–†–û–° –ù–ï –ë–£–î–ï–¢ –ü–û–•–û–ñ –ù–ê –ó–ê–ü–†–û–° –ü–û –ì–ê–î–ê–ù–ò–Æ, –¢–û –¢–´ –î–û–õ–ñ–ï–ù –í–ï–ñ–õ–ò–í–û –û–¢–ö–ê–ó–ê–¢–¨ –í –ì–ê–î–ê–ù–ò–ò –ò –ë–û–õ–¨–®–ï –ù–ò–ß–ï–ì–û –ù–ï –ü–ò–°–ê–¢–¨!!! :
				` + message.Text

				log.Printf("–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: %s", message.Text)

				// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –≤ DeepSeek
				answer, err := queryDeepSeek(userPrompt)
				if err != nil {
					answer = "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ DeepSeek: " + err.Error()
				}

				// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Ç–≤–µ—Ç –Ω–µ –ø—É—Å—Ç–æ–π
				if answer == "" {
					answer = "–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ —Å–º–æ–≥ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤–∞—à –∑–∞–ø—Ä–æ—Å."
				}

				// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
				lastBotMessageID = sendMessage(bot, message.Chat.ID, answer)
				// –ü–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–æ–ø—Ä–æ—Å–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.
				userState[message.Chat.ID] = "main"

			}
		}

	// –°–æ—Å—Ç–æ—è–Ω–∏—è "instruction" –∏ "tariffs" ‚Äî –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.
	case "instruction", "tariffs":
		// –í —ç—Ç–∏—Ö —Ä–µ–∂–∏–º–∞—Ö –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–∞—è –¥–æ–ø—É—Å—Ç–∏–º–∞—è –∫–æ–º–∞–Ω–¥–∞ ‚Äî "–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é".
		if message.Text == "–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é" {
			// –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤ "main" –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.
			userState[message.Chat.ID] = "main"
			lastBotMessageID = sendMainMenu(bot, message.Chat.ID)
		} else {
			// –ï—Å–ª–∏ –≤–≤–æ–¥–∏—Ç—Å—è –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç, –≤—ã–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ.
			lastBotMessageID = sendMessage(bot, message.Chat.ID, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç '–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é'.")
		}

	// –ï—Å–ª–∏ –ø–æ –∫–∞–∫–æ–π-—Ç–æ –ø—Ä–∏—á–∏–Ω–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –Ω–∏ –æ–¥–Ω–æ–º—É –∏–∑ –≤—ã—à–µ–æ–ø–∏—Å–∞–Ω–Ω—ã—Ö, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –µ–≥–æ –≤ "main".
	default:
		userState[message.Chat.ID] = "main"
		lastBotMessageID = sendMainMenu(bot, message.Chat.ID)
	}
}

// –§—É–Ω–∫—Ü–∏—è sendMessage –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π, —Å–æ–¥–µ—Ä–∂–∞—â–µ–π –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é".
// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç ID –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è.
func sendMessage(bot *tgbotapi.BotAPI, chatID int64, text string) int {
	// –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∑–∞–¥–∞–Ω–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º.
	msg := tgbotapi.NewMessage(chatID, text)
	// –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–π –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é".
	msg.ReplyMarkup = tgbotapi.ReplyKeyboardMarkup{
		Keyboard: [][]tgbotapi.KeyboardButton{
			{tgbotapi.NewKeyboardButton("–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")},
		},
		ResizeKeyboard:  true,  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∞–¥–∞–ø—Ç–∞—Ü–∏—è —Ä–∞–∑–º–µ—Ä–æ–≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –ø–æ–¥ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
		OneTimeKeyboard: false, // –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∏—Å—á–µ–∑–∞–µ—Ç –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É.
	}
	// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ MessageID.
	sentMsg, _ := bot.Send(msg)
	return sentMsg.MessageID
}

// –§—É–Ω–∫—Ü–∏—è sendMainMenu –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ä–µ–∂–∏–º—ã.
// –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–Ω–æ–ø–∫–∏: "üîÆ –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å üîÆ", "üìë –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è üìë", "üí≤–¢–∞—Ä–∏—Ñ—ãüí≤" –∏ "–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é".
func sendMainMenu(bot *tgbotapi.BotAPI, chatID int64) int {
	// –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é.
	msg := tgbotapi.NewMessage(chatID, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:")
	// –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é.
	msg.ReplyMarkup = tgbotapi.ReplyKeyboardMarkup{
		Keyboard: [][]tgbotapi.KeyboardButton{
			// –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞: –∫–Ω–æ–ø–∫–∞ "üîÆ –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å üîÆ"
			{tgbotapi.NewKeyboardButton("üîÆ –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å üîÆ")},
			// –í—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞: –∫–Ω–æ–ø–∫–∞ "üìë –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è üìë"
			{tgbotapi.NewKeyboardButton("üìë –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è üìë")},
			// –¢—Ä–µ—Ç—å—è —Å—Ç—Ä–æ–∫–∞: –∫–Ω–æ–ø–∫–∞ "üí≤–¢–∞—Ä–∏—Ñ—ãüí≤"
			{tgbotapi.NewKeyboardButton("üí≤–¢–∞—Ä–∏—Ñ—ãüí≤")},
		},
		ResizeKeyboard:  true,
		OneTimeKeyboard: false,
	}
	// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ ID.
	sentMsg, _ := bot.Send(msg)
	return sentMsg.MessageID
}

// –§—É–Ω–∫—Ü–∏—è sendQuestionMenu –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –º–µ–Ω—é –¥–ª—è —Ä–µ–∂–∏–º–∞ "üîÆ –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å üîÆ".
// –ó–¥–µ—Å—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –≤—ã–±—Ä–∞—Ç—å –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ (—Å –∑–∞—Ä–∞–Ω–µ–µ –∑–∞–¥–∞–Ω–Ω—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏)
// –∏–ª–∏ –≤–≤–µ—Å—Ç–∏ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –≤—Ä—É—á–Ω—É—é (–µ—Å–ª–∏ —Ç–µ–∫—Å—Ç –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∫–Ω–æ–ø–∫–∞–º).
func sendQuestionMenu(bot *tgbotapi.BotAPI, chatID int64) int {
	// –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º –º–µ–Ω—é –≤–æ–ø—Ä–æ—Å–æ–≤.
	msg := tgbotapi.NewMessage(chatID, "–í—ã–±–µ—Ä–∏—Ç–µ –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –µ–≥–æ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ:")
	// –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ –∏ –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é".
	msg.ReplyMarkup = tgbotapi.ReplyKeyboardMarkup{
		Keyboard: [][]tgbotapi.KeyboardButton{
			// –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞: –∫–Ω–æ–ø–∫–∞ "–ß—Ç–æ –∂–¥—ë—Ç –º–µ–Ω—è —Å–µ–≥–æ–¥–Ω—è?"
			{tgbotapi.NewKeyboardButton("–ß—Ç–æ –∂–¥—ë—Ç –º–µ–Ω—è —Å–µ–≥–æ–¥–Ω—è?")},
			// –í—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞: –∫–Ω–æ–ø–∫–∞ "–õ—é–±–æ–≤–Ω—ã–π —Ä–∞—Å–∫–ª–∞–¥"
			{tgbotapi.NewKeyboardButton("–õ—é–±–æ–≤–Ω—ã–π —Ä–∞—Å–∫–ª–∞–¥")},
			// –¢—Ä–µ—Ç—å—è —Å—Ç—Ä–æ–∫–∞: –∫–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é"
			{tgbotapi.NewKeyboardButton("–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")},
		},
		ResizeKeyboard:  true,
		OneTimeKeyboard: false,
	}
	// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –µ–≥–æ ID.
	sentMsg, _ := bot.Send(msg)
	return sentMsg.MessageID
}

// –§—É–Ω–∫—Ü–∏—è sendInstruction –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π —Å –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é".
func sendInstruction(bot *tgbotapi.BotAPI, chatID int64) int {
	// –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏.
	msg := tgbotapi.NewMessage(chatID, "üìë –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è üìë: \n–ó–¥–µ—Å—å –±—É–¥–µ—Ç –≤–∞—à–∞ üìë –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è üìë.")
	// –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é".
	msg.ReplyMarkup = tgbotapi.ReplyKeyboardMarkup{
		Keyboard: [][]tgbotapi.KeyboardButton{
			{tgbotapi.NewKeyboardButton("–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")},
		},
		ResizeKeyboard:  true,
		OneTimeKeyboard: false,
	}
	// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –µ–≥–æ ID.
	sentMsg, _ := bot.Send(msg)
	return sentMsg.MessageID
}

// –§—É–Ω–∫—Ü–∏—è sendTariffs –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º —Ç–∞—Ä–∏—Ñ–æ–≤ –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π —Å –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é".
func sendTariffs(bot *tgbotapi.BotAPI, chatID int64) int {
	// –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º —Ç–∞—Ä–∏—Ñ–æ–≤.
	msg := tgbotapi.NewMessage(chatID, "üí≤–¢–∞—Ä–∏—Ñ—ãüí≤: \n–ó–¥–µ—Å—å –±—É–¥–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–æ–≤.")
	// –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é".
	msg.ReplyMarkup = tgbotapi.ReplyKeyboardMarkup{
		Keyboard: [][]tgbotapi.KeyboardButton{
			{tgbotapi.NewKeyboardButton("–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")},
		},
		ResizeKeyboard:  true,
		OneTimeKeyboard: false,
	}
	// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –µ–≥–æ ID.
	sentMsg, _ := bot.Send(msg)
	return sentMsg.MessageID
}

func importEnv(fileName, varName string) (variable string) {
	err := godotenv.Load(fileName)
	if err != nil {
		log.Fatalf("–û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ —Ñ–∞–π–ª–∞ %v", err)
	}

	variable = os.Getenv(varName)
	if variable == "" {
		log.Fatalf("–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è %v –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.", variable)
	}
	fmt.Println("–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è ", varName, " –∏–∑ —Ñ–∞–π–ª–∞ ", fileName, " –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∞!")
	return
}

// –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ DeepSeek API (Ollama)
type DeepSeekRequest struct {
	Model  string `json:"model"`
	Prompt string `json:"prompt"`
}

// –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞ –æ—Ç DeepSeek API (–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–µ–º, –µ—Å–ª–∏ —Ñ–æ—Ä–º–∞—Ç –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è)
type DeepSeekResponse struct {
	Response string `json:"response"`
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –∫ DeepSeek
func queryDeepSeek(prompt string) (string, error) {
	url := "http://localhost:11434/api/generate"

	// –§–æ—Ä–º–∏—Ä—É–µ–º JSON-–∑–∞–ø—Ä–æ—Å
	reqBody, err := json.Marshal(DeepSeekRequest{
		Model:  "deepseek-r1:7b",
		Prompt: prompt,
	})
	if err != nil {
		return "", fmt.Errorf("–æ—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞: %v", err)
	}

	// –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞
	resp, err := http.Post(url, "application/json", bytes.NewBuffer(reqBody))
	if err != nil {
		return "", fmt.Errorf("–æ—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞: %v", err)
	}
	defer resp.Body.Close()

	// –ß–∏—Ç–∞–µ–º –æ—Ç–≤–µ—Ç –ø–æ—Å—Ç—Ä–æ—á–Ω–æ (–µ—Å–ª–∏ JSONL)
	var fullResponse string
	scanner := bufio.NewScanner(resp.Body)
	for scanner.Scan() {
		line := scanner.Text()
		log.Printf("–û—Ç–≤–µ—Ç –æ—Ç DeepSeek (—Å—Ç—Ä–æ–∫–∞): %s", line)

		var dsResp DeepSeekResponse
		err = json.Unmarshal([]byte(line), &dsResp)
		if err != nil {
			log.Printf("–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON: %v", err)
			continue
		}

		fullResponse += dsResp.Response
	}

	if err := scanner.Err(); err != nil && err != io.EOF {
		return "", fmt.Errorf("–æ—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞: %v", err)
	}

	// –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç –ø—É—Å—Ç–æ–π, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
	if fullResponse == "" {
		return "DeepSeek –Ω–µ –≤–µ—Ä–Ω—É–ª –æ—Ç–≤–µ—Ç. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —Ä–∞–±–æ—Ç–∞–µ—Ç –ª–∏ –º–æ–¥–µ–ª—å.", nil
	}

	// –£–¥–∞–ª—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –º–µ–∂–¥—É <think> –∏ </think> (—Å —É—á—ë—Ç–æ–º –ø–µ—Ä–µ–Ω–æ—Å–æ–≤ —Å—Ç—Ä–æ–∫)
	cleanedResponse := regexp.MustCompile(`(?s)<think>.*?</think>`).ReplaceAllString(fullResponse, "")
	cleanedResponse = strings.TrimSpace(cleanedResponse) // –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã –∏ –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏

	return cleanedResponse, nil
}
