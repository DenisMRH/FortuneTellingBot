package main

import (
	"fmt"
	log "log"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

// –§—É–Ω–∫—Ü–∏—è handleMessage –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—Ö–æ–¥—è—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
func handleMessage(bot *tgbotapi.BotAPI, message *tgbotapi.Message) {

	// // ----------------------- –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è -----------------------
	// // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID —á–∞—Ç–∞ –∏ ID —Å–æ–æ–±—â–µ–Ω–∏—è.
	// deleteMsg := tgbotapi.NewDeleteMessage(message.Chat.ID, message.MessageID)
	// // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
	// bot.Send(deleteMsg)

	// // ----------------------- –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞ -----------------------
	// // –ï—Å–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è lastBotMessageID –Ω–µ —Ä–∞–≤–Ω–∞ 0, –∑–Ω–∞—á–∏—Ç –±–æ—Ç —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª —Å–æ–æ–±—â–µ–Ω–∏–µ.
	// if lastBotMessageID != 0 {
	// 	// –°–æ–∑–¥–∞–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞.
	// 	deleteBotMsg := tgbotapi.NewDeleteMessage(message.Chat.ID, lastBotMessageID)
	// 	// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ.
	// 	bot.Send(deleteBotMsg)
	// }

	// ----------------------- –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è -----------------------
	// –ò–∑–≤–ª–µ–∫–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —á–∞—Ç–∞ –∏–∑ –º–∞–ø—ã userState.
	state, exists := userState[message.Chat.ID]
	// –ï—Å–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–µ –∑–∞–¥–∞–Ω–æ, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å—á–∏—Ç–∞–µ–º, —á—Ç–æ —á–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é.
	if !exists {
		state = "main"
		userState[message.Chat.ID] = "main"
	}

	// ----------------------- –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è -----------------------
	switch state {
	// –°–æ—Å—Ç–æ—è–Ω–∏–µ "main" ‚Äî –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é.
	case "main":
		switch message.Text {
		// –ö–æ–º–∞–Ω–¥–∞ /start –∏–Ω–∏—Ü–∏–∏—Ä—É–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.
		case "/start":
			// –°–æ—Å—Ç–æ—è–Ω–∏–µ –æ—Å—Ç–∞–µ—Ç—Å—è "main" –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.
			lastBotMessageID = sendMainMenu(bot, message.Chat.ID)
		// –ü—Ä–∏ –≤—ã–±–æ—Ä–µ –ø—É–Ω–∫—Ç–∞ "üîÆ –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å üîÆ" –ø–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Ä–µ–∂–∏–º –≤–æ–ø—Ä–æ—Å–∞.
		case "üîÆ –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å üîÆ":
			// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —á–∞—Ç–∞ –≤ "question".
			userState[message.Chat.ID] = "question"
			// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–µ–Ω—é –¥–ª—è –≤–æ–ø—Ä–æ—Å–æ–≤, –≥–¥–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –≤—ã–±—Ä–∞—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç –∏–ª–∏ –≤–≤–µ—Å—Ç–∏ –≤–æ–ø—Ä–æ—Å –≤—Ä—É—á–Ω—É—é.
			lastBotMessageID = sendQuestionMenu(bot, message.Chat.ID)
		// –ü—Ä–∏ –≤—ã–±–æ—Ä–µ "üìë –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è üìë" –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ "instruction" –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é.
		case "üìë –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è üìë":
			userState[message.Chat.ID] = "instruction"
			lastBotMessageID = sendInstruction(bot, message.Chat.ID)
		// –ü—Ä–∏ –≤—ã–±–æ—Ä–µ "üí≤–¢–∞—Ä–∏—Ñ—ãüí≤" –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ "tariffs" –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–æ–≤.
		case "üí≤–¢–∞—Ä–∏—Ñ—ãüí≤":
			userState[message.Chat.ID] = "tariffs"
			lastBotMessageID = sendTariffs(bot, message.Chat.ID)
		// –ï—Å–ª–∏ –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.
		case "–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é":
			userState[message.Chat.ID] = "main"
			lastBotMessageID = sendMainMenu(bot, message.Chat.ID)
		// –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ª—é–±–æ–π –¥—Ä—É–≥–æ–π —Ç–µ–∫—Å—Ç –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é, –≤—ã–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ.
		default:
			lastBotMessageID = sendMessage(bot, message.Chat.ID, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –∏–∑ –º–µ–Ω—é.")
		}

	// –°–æ—Å—Ç–æ—è–Ω–∏–µ "question" ‚Äî –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–µ—Ä–µ—à—ë–ª –≤ —Ä–µ–∂–∏–º "üîÆ –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å üîÆ".
	case "question":
		switch message.Text {
		// –ï—Å–ª–∏ –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.
		case "–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é":
			userState[message.Chat.ID] = "main"
			lastBotMessageID = sendMainMenu(bot, message.Chat.ID)
		// –ï—Å–ª–∏ –≤–≤–µ–¥—ë–Ω –ª—é–±–æ–π –¥—Ä—É–≥–æ–π —Ç–µ–∫—Å—Ç, —Å—á–∏—Ç–∞–µ–º –µ–≥–æ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω—ã–º –≤–æ–ø—Ä–æ—Å–æ–º.
		default:
			if len(message.Text) > 200 {
				// –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –Ω–µ-—Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
				// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª–∏–Ω–Ω–æ–µ –∏–ª–∏ –Ω–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ.
				lastBotMessageID = sendMessage(bot, message.Chat.ID, "–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –ª–∏–±–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ.")
				// –ü–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–æ–ø—Ä–æ—Å–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.
				userState[message.Chat.ID] = "main"
			} else {
				// –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–∞—Ä—Ç—ã –∏–∑ JSON-—Ñ–∞–π–ª–∞
				cards, err := loadTarotCards("tarocards.json")
				if err != nil {
					fmt.Println("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ä—Ç:", err) // –í—ã–≤–æ–¥–∏–º –æ—à–∏–±–∫—É, –µ—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª—Å—è
					return                                    // –ó–∞–≤–µ—Ä—à–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã
				}

				// –í—ã–±–∏—Ä–∞–µ–º 3 —Å–ª—É—á–∞–π–Ω—ã–µ –∫–∞—Ä—Ç—ã
				selected := drawThreeCards(cards)

				// –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –∫–æ–Ω—Å–æ–ª—å
				fmt.Println("–í–∞—à–∏ –∫–∞—Ä—Ç—ã:")
				cardMsg, cardPrompt := "", ""
				for _, card := range selected { // –ò—Ç–µ—Ä–∏—Ä—É–µ–º—Å—è –ø–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–º –∫–∞—Ä—Ç–∞–º
					cardMsg = cardMsg + card.Name + "\n" + card.Description + "\n\n\n"
					cardPrompt = cardPrompt + card.Name + "\n"
				}

				msg := tgbotapi.NewMessage(message.Chat.ID, cardMsg)
				_, err = bot.Send(msg)
				if err != nil {
					log.Printf("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: %v", err)
				}

				userPrompt := `
				–¢—ã –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è —Ä—É—Å–∫–æ—è–∑—ã—á–Ω–∞—è –≥–∞–¥–∞–ª–∫–∞-—Ç–∞—Ä–æ–ª–æ–≥! –†–∞–∑–±–∏—Ä–∞–µ—à—å—Å—è –≤–æ –≤—Å–µ—Ö —Ç–µ—Ä–º–∏–Ω–∞—Ö —Ç–∞—Ä–æ–ª–æ–≥–∏–∏, –≤–æ –≤—Å–µ—Ö –∫–∞—Ä—Ç–∞—Ö –¢–∞—Ä–æ –∏ –∏—Ö –∑–Ω–∞—á–µ–Ω–∏—è—Ö! \n
				–û—Ç–≤–µ—Ç—å –Ω–∞ –º–æ–π –≤–æ–ø—Ä–æ—Å—Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø–æ–¥—Ä–æ–±–Ω–æ, –æ–ø–∏—Ä–∞—è—Å—å –Ω–∞ –≤—ã–ø–∞–≤—à–∏–µ –º–Ω–µ –∫–∞—Ä—Ç—ã. \n
				–í–æ–ø—Ä–æ—Å:
				` + message.Text + `\n –ö–∞—Ä—Ç—ã –∫–æ—Ç–æ—Ä—ã–µ –º–Ω–µ –≤—ã–ø–∞–ª–∏: \n` + cardMsg

				log.Printf("–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: %s", message.Text)

				// –°–æ–∑–¥–∞—ë–º –∫–∞–Ω–∞–ª—ã –¥–ª—è –æ—Ç–≤–µ—Ç–∞ –∏ –æ—à–∏–±–æ–∫
				answerChan := make(chan string)
				errorChan := make(chan error)

				// –ó–∞–ø—É—Å–∫–∞–µ–º queryDeepSeek –≤ –≥–æ—Ä—É—Ç–∏–Ω–µ
				go func() {
					answer, err := queryDeepSeek(userPrompt)
					if err != nil {
						errorChan <- err
						answerChan <- "" // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç
						return
					}
					answerChan <- answer
					errorChan <- nil
				}()

				answer := <-answerChan
				err = <-errorChan

				// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Ç–≤–µ—Ç –Ω–µ –ø—É—Å—Ç–æ–π
				if answer == "" {
					answer = "–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ —Å–º–æ–≥ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤–∞—à –∑–∞–ø—Ä–æ—Å."
				}
				if err != nil {
					answer = "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ DeepSeek: " + err.Error()
				}
				// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
				lastBotMessageID = sendMessage(bot, message.Chat.ID, answer)
				// –ü–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–æ–ø—Ä–æ—Å–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.
				userState[message.Chat.ID] = "main"

			}
		}

	// –°–æ—Å—Ç–æ—è–Ω–∏—è "instruction" –∏ "tariffs" ‚Äî –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.
	case "instruction", "tariffs":
		// –í —ç—Ç–∏—Ö —Ä–µ–∂–∏–º–∞—Ö –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–∞—è –¥–æ–ø—É—Å—Ç–∏–º–∞—è –∫–æ–º–∞–Ω–¥–∞ ‚Äî "–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é".
		if message.Text == "–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é" {
			// –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤ "main" –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.
			userState[message.Chat.ID] = "main"
			lastBotMessageID = sendMainMenu(bot, message.Chat.ID)
		} else {
			// –ï—Å–ª–∏ –≤–≤–æ–¥–∏—Ç—Å—è –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç, –≤—ã–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ.
			lastBotMessageID = sendMessage(bot, message.Chat.ID, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç '–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é'.")
		}

	// –ï—Å–ª–∏ –ø–æ –∫–∞–∫–æ–π-—Ç–æ –ø—Ä–∏—á–∏–Ω–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –Ω–∏ –æ–¥–Ω–æ–º—É –∏–∑ –≤—ã—à–µ–æ–ø–∏—Å–∞–Ω–Ω—ã—Ö, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –µ–≥–æ –≤ "main".
	default:
		userState[message.Chat.ID] = "main"
		lastBotMessageID = sendMainMenu(bot, message.Chat.ID)
	}
}
